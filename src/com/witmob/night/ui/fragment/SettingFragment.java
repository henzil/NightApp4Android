package com.witmob.night.ui.fragment;import java.util.Map;import netlib.helper.DataServiceHelper;import netlib.model.ErrorModel;import netlib.net.DataAsyncTaskPool;import netlib.net.DataJsonAsyncTask;import netlib.util.ErrorCodeUtil;import netlib.util.StringUtil;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import android.widget.Toast;import com.witmob.night.R;import com.witmob.night.service.net.SettingJsonHelper;/** * @author henzil * @version create time:2014-9-1_下午4:33:22 * @Description 应用设置 fragment */public class SettingFragment extends BaseNightFragment {	protected DataJsonAsyncTask asyncTask;	protected DataAsyncTaskPool dataPool;	protected DataServiceHelper dataServiceHelper;	protected SettingJsonHelper jsonHelper;	private TextView textView;		@Override	protected void initData() {		dataPool = new DataAsyncTaskPool();		dataServiceHelper = new DataServiceHelper() {			@Override			public void preExecute() {				if (loadingDialog != null) {					if (!loadingDialog.isShowing()) {						loadingDialog.show();					}				}			}			@Override			public void postExecute(String TAG, Object result, Object... params) {				int mode = (Integer) params[0];				updateView(result, mode);			}			@Override			public Object doInBackground(Object... params) {				try {					Thread.sleep(2000);				} catch (InterruptedException e) {					e.printStackTrace();				}				return jsonHelper.parseJson(StringUtil.readTextFileFromRawResourceId(context, R.raw.test2));//				return null;			}		};		jsonHelper = new SettingJsonHelper(context);		initDialog();	}	@Override	protected View initViews(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {		View view = inflater.inflate(R.layout.setting_fragment, container, false);		textView = (TextView) view.findViewById(R.id.textView);		return view;	}	@Override	protected void initWidgetActions() {		// TODO Auto-generated method stub		initNet();	}	private void initNet() {		jsonHelper.updateParams("uid");		asyncTask = new DataJsonAsyncTask(TAG, dataServiceHelper, jsonHelper);		dataPool.execute(asyncTask, LOAD_MODE);		showLoadDialog();	}	protected void updateView(Object object, int mode) {		hideLoadDialog();		if (object == null) {			Toast.makeText(context, R.string.load_data_error, Toast.LENGTH_SHORT).show();			return;		}		if (object instanceof ErrorModel) {			ErrorModel errorModel = (ErrorModel) object;			Toast.makeText(context, ErrorCodeUtil.convertErrorCode(context, errorModel.getErrorCode()),					Toast.LENGTH_SHORT).show();			return;		}				if(mode == LOAD_MODE){			if(object instanceof Map<?, ?>){				// TODO 正常的数据解析				Map<String, Object> map = (Map<String, Object>) object;				Log.e("tag", "result = " + map.toString());				textView.setText(map.toString());			}		}	}}